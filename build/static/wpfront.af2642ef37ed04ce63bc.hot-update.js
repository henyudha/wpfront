webpackHotUpdate("wpfront",{

/***/ "./packages/mars-theme/src/components/index.js":
/*!*****************************************************!*\
  !*** ./packages/mars-theme/src/components/index.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"./node_modules/core-js/modules/es.symbol.description.js\");\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var _header_header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./header/header */ \"./packages/mars-theme/src/components/header/header.js\");\n/* harmony import */ var _footer_footer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./footer/footer */ \"./packages/mars-theme/src/components/footer/footer.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./list */ \"./packages/mars-theme/src/components/list/index.js\");\n/* harmony import */ var _post__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./post */ \"./packages/mars-theme/src/components/post.js\");\n/* harmony import */ var _pages_page__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./pages/page */ \"./packages/mars-theme/src/components/pages/page.js\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./loading */ \"./packages/mars-theme/src/components/loading.js\");\n/* harmony import */ var _title__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./title */ \"./packages/mars-theme/src/components/title.js\");\n/* harmony import */ var _pages__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pages */ \"./packages/mars-theme/src/components/pages/index.jsx\");\n/* harmony import */ var _page_error__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./page-error */ \"./packages/mars-theme/src/components/page-error.js\");\n/* harmony import */ var _assets_css__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../assets/css */ \"./packages/mars-theme/src/assets/css/index.js\");\n/* harmony import */ var _prolog__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./prolog */ \"./packages/mars-theme/src/components/prolog.js\");\n/* harmony import */ var _banner__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./banner */ \"./packages/mars-theme/src/components/banner.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * Theme is the root React component of our theme. The one we will export\n * in roots.\n *\n * @param props - The props injected by Frontity's {@link connect} HOC.\n *\n * @returns The top-level react component representing the theme.\n */const Theme=({state})=>{// Get information about the current URL.\nconst data=state.source.get(state.router.link);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_title__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsxs\"])(frontity__WEBPACK_IMPORTED_MODULE_1__[\"Head\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(\"meta\",{name:\"description\",content:state.frontity.description}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(\"html\",{lang:\"en\"})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_assets_css__WEBPACK_IMPORTED_MODULE_12__[\"default\"],{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(HeadContainer,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_header_header__WEBPACK_IMPORTED_MODULE_3__[\"default\"],{})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Main,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsxs\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_2__[\"default\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_loading__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{when:data.isFetching}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_pages__WEBPACK_IMPORTED_MODULE_10__[\"default\"],{when:data.isHome}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_list__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{when:data.isArchive}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_pages_page__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{when:data.isPage}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_post__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{when:data.isPostType}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_page_error__WEBPACK_IMPORTED_MODULE_11__[\"default\"],{when:data.isError})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(FooterContainer,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_footer_footer__WEBPACK_IMPORTED_MODULE_4__[\"default\"],{})})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Theme));// const globalStyles = css``;  Sementara dialihkan ke folder assets/css\nconst HeadContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1nzqhd62\",label:\"HeadContainer\"})( false?undefined:{name:\"1booj2w\",styles:\"display:flex;align-items:center;flex-direction:column;background-color:#ffffff\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFjL05vZGVwcm9qZWN0cy93cGZyb250L3BhY2thZ2VzL21hcnMtdGhlbWUvc3JjL2NvbXBvbmVudHMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMkVnQyIsImZpbGUiOiIvVXNlcnMvaW1hYy9Ob2RlcHJvamVjdHMvd3Bmcm9udC9wYWNrYWdlcy9tYXJzLXRoZW1lL3NyYy9jb21wb25lbnRzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2xvYmFsLCBjc3MsIGNvbm5lY3QsIHN0eWxlZCwgSGVhZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFN3aXRjaCBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvc3dpdGNoXCI7XG5pbXBvcnQgSGVhZGVyIGZyb20gXCIuL2hlYWRlci9oZWFkZXJcIjtcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyL2Zvb3RlclwiO1xuaW1wb3J0IExpc3QgZnJvbSBcIi4vbGlzdFwiO1xuaW1wb3J0IFBvc3QgZnJvbSBcIi4vcG9zdFwiO1xuaW1wb3J0IFBhZ2UgZnJvbSBcIi4vcGFnZXMvcGFnZVwiO1xuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4vbG9hZGluZ1wiO1xuaW1wb3J0IFRpdGxlIGZyb20gXCIuL3RpdGxlXCI7XG5pbXBvcnQgSG9tZVBhZ2UgZnJvbSBcIi4vcGFnZXNcIjtcbmltcG9ydCBQYWdlRXJyb3IgZnJvbSBcIi4vcGFnZS1lcnJvclwiO1xuaW1wb3J0IFN0eWxpbmcgZnJvbSBcIi4uL2Fzc2V0cy9jc3NcIjtcbmltcG9ydCBQcm9sb2cgZnJvbSBcIi4vcHJvbG9nXCI7XG5pbXBvcnQgQmFubmVyIGZyb20gXCIuL2Jhbm5lclwiO1xuXG4vKipcbiAqIFRoZW1lIGlzIHRoZSByb290IFJlYWN0IGNvbXBvbmVudCBvZiBvdXIgdGhlbWUuIFRoZSBvbmUgd2Ugd2lsbCBleHBvcnRcbiAqIGluIHJvb3RzLlxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIFRoZSBwcm9wcyBpbmplY3RlZCBieSBGcm9udGl0eSdzIHtAbGluayBjb25uZWN0fSBIT0MuXG4gKlxuICogQHJldHVybnMgVGhlIHRvcC1sZXZlbCByZWFjdCBjb21wb25lbnQgcmVwcmVzZW50aW5nIHRoZSB0aGVtZS5cbiAqL1xuY29uc3QgVGhlbWUgPSAoeyBzdGF0ZSB9KSA9PiB7XG4gIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7LyogQWRkIHNvbWUgbWV0YXRhZ3MgdG8gdGhlIDxoZWFkPiBvZiB0aGUgSFRNTC4gKi99XG4gICAgICA8VGl0bGUgLz5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PXtzdGF0ZS5mcm9udGl0eS5kZXNjcmlwdGlvbn0gLz5cbiAgICAgICAgPGh0bWwgbGFuZz1cImVuXCIgLz5cbiAgICAgIDwvSGVhZD5cblxuICAgICAgey8qIEFkZCBzb21lIGdsb2JhbCBzdHlsZXMgZm9yIHRoZSB3aG9sZSBzaXRlLCBsaWtlIGJvZHkgb3IgYSdzLiBcbiAgICAgIE5vdCBjbGFzc2VzIGhlcmUgYmVjYXVzZSB3ZSB1c2UgQ1NTLWluLUpTLiBPbmx5IGdsb2JhbCBIVE1MIHRhZ3MuICovfVxuICAgICAgey8qIDxHbG9iYWwgc3R5bGVzPXtnbG9iYWxTdHlsZXN9IC8+ICAqL31cbiAgICAgIDxTdHlsaW5nIC8+XG5cbiAgICAgIHsvKiBBZGQgdGhlIGhlYWRlciBvZiB0aGUgc2l0ZS4gKi99XG4gICAgICA8SGVhZENvbnRhaW5lcj5cbiAgICAgICAgPEhlYWRlciAvPlxuICAgICAgPC9IZWFkQ29udGFpbmVyPlxuICAgICAgey8qIDxCYW5uZXIgLz4gKi99XG5cbiAgICAgIHsvKiBQcm9sb2cgb25seSBzaG93IGluIGhvbWUgKi99XG4gICAgICB7LyogPFByb2xvZyB3aGVuPXtkYXRhLmxpbmtbXCIvXCJdfSAvPiAqL31cbiAgICAgIFxuICAgICAgey8qIEFkZCB0aGUgbWFpbiBzZWN0aW9uLiBJdCByZW5kZXJzIGEgZGlmZmVyZW50IGNvbXBvbmVudCBkZXBlbmRpbmdcbiAgICAgIG9uIHRoZSB0eXBlIG9mIFVSTCB3ZSBhcmUgaW4uICovfVxuICAgICAgPE1haW4+XG4gICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgPExvYWRpbmcgd2hlbj17ZGF0YS5pc0ZldGNoaW5nfSAvPlxuICAgICAgICAgIDxIb21lUGFnZSB3aGVuPXtkYXRhLmlzSG9tZX0gLz5cbiAgICAgICAgICA8TGlzdCB3aGVuPXtkYXRhLmlzQXJjaGl2ZX0gLz5cbiAgICAgICAgICA8UGFnZSB3aGVuPXtkYXRhLmlzUGFnZX0gLz5cbiAgICAgICAgICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdFR5cGV9IC8+XG4gICAgICAgICAgPFBhZ2VFcnJvciB3aGVuPXtkYXRhLmlzRXJyb3J9IC8+XG4gICAgICAgIDwvU3dpdGNoPlxuICAgICAgPC9NYWluPlxuXG4gICAgICB7LyogRm9vdGVyICAqL31cbiAgICAgIDxGb290ZXJDb250YWluZXI+XG4gICAgICAgIDxGb290ZXIgLz5cbiAgICAgIDwvRm9vdGVyQ29udGFpbmVyPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChUaGVtZSk7XG5cbi8vIGNvbnN0IGdsb2JhbFN0eWxlcyA9IGNzc2BgOyAgU2VtZW50YXJhIGRpYWxpaGthbiBrZSBmb2xkZXIgYXNzZXRzL2Nzc1xuXG5jb25zdCBIZWFkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbmA7XG5cbi8vIFByb2xvZyB3ZWIgXG5cbmNvbnN0IE1haW4gPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLy8gYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxuICAvLyAgIDE4MGRlZyxcbiAgLy8gICByZ2JhKDY2LCAxNzQsIDIyOCwgMC4xKSxcbiAgLy8gICByZ2JhKDY2LCAxNzQsIDIyOCwgMClcbiAgLy8gKTtcbmA7XG5cbmNvbnN0IEZvb3RlckNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbmA7XG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});// Prolog web \nconst Main=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1nzqhd61\",label:\"Main\"})( false?undefined:{name:\"zl1inp\",styles:\"display:flex;justify-content:center\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFjL05vZGVwcm9qZWN0cy93cGZyb250L3BhY2thZ2VzL21hcnMtdGhlbWUvc3JjL2NvbXBvbmVudHMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0Z1QiIsImZpbGUiOiIvVXNlcnMvaW1hYy9Ob2RlcHJvamVjdHMvd3Bmcm9udC9wYWNrYWdlcy9tYXJzLXRoZW1lL3NyYy9jb21wb25lbnRzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2xvYmFsLCBjc3MsIGNvbm5lY3QsIHN0eWxlZCwgSGVhZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFN3aXRjaCBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvc3dpdGNoXCI7XG5pbXBvcnQgSGVhZGVyIGZyb20gXCIuL2hlYWRlci9oZWFkZXJcIjtcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyL2Zvb3RlclwiO1xuaW1wb3J0IExpc3QgZnJvbSBcIi4vbGlzdFwiO1xuaW1wb3J0IFBvc3QgZnJvbSBcIi4vcG9zdFwiO1xuaW1wb3J0IFBhZ2UgZnJvbSBcIi4vcGFnZXMvcGFnZVwiO1xuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4vbG9hZGluZ1wiO1xuaW1wb3J0IFRpdGxlIGZyb20gXCIuL3RpdGxlXCI7XG5pbXBvcnQgSG9tZVBhZ2UgZnJvbSBcIi4vcGFnZXNcIjtcbmltcG9ydCBQYWdlRXJyb3IgZnJvbSBcIi4vcGFnZS1lcnJvclwiO1xuaW1wb3J0IFN0eWxpbmcgZnJvbSBcIi4uL2Fzc2V0cy9jc3NcIjtcbmltcG9ydCBQcm9sb2cgZnJvbSBcIi4vcHJvbG9nXCI7XG5pbXBvcnQgQmFubmVyIGZyb20gXCIuL2Jhbm5lclwiO1xuXG4vKipcbiAqIFRoZW1lIGlzIHRoZSByb290IFJlYWN0IGNvbXBvbmVudCBvZiBvdXIgdGhlbWUuIFRoZSBvbmUgd2Ugd2lsbCBleHBvcnRcbiAqIGluIHJvb3RzLlxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIFRoZSBwcm9wcyBpbmplY3RlZCBieSBGcm9udGl0eSdzIHtAbGluayBjb25uZWN0fSBIT0MuXG4gKlxuICogQHJldHVybnMgVGhlIHRvcC1sZXZlbCByZWFjdCBjb21wb25lbnQgcmVwcmVzZW50aW5nIHRoZSB0aGVtZS5cbiAqL1xuY29uc3QgVGhlbWUgPSAoeyBzdGF0ZSB9KSA9PiB7XG4gIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7LyogQWRkIHNvbWUgbWV0YXRhZ3MgdG8gdGhlIDxoZWFkPiBvZiB0aGUgSFRNTC4gKi99XG4gICAgICA8VGl0bGUgLz5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PXtzdGF0ZS5mcm9udGl0eS5kZXNjcmlwdGlvbn0gLz5cbiAgICAgICAgPGh0bWwgbGFuZz1cImVuXCIgLz5cbiAgICAgIDwvSGVhZD5cblxuICAgICAgey8qIEFkZCBzb21lIGdsb2JhbCBzdHlsZXMgZm9yIHRoZSB3aG9sZSBzaXRlLCBsaWtlIGJvZHkgb3IgYSdzLiBcbiAgICAgIE5vdCBjbGFzc2VzIGhlcmUgYmVjYXVzZSB3ZSB1c2UgQ1NTLWluLUpTLiBPbmx5IGdsb2JhbCBIVE1MIHRhZ3MuICovfVxuICAgICAgey8qIDxHbG9iYWwgc3R5bGVzPXtnbG9iYWxTdHlsZXN9IC8+ICAqL31cbiAgICAgIDxTdHlsaW5nIC8+XG5cbiAgICAgIHsvKiBBZGQgdGhlIGhlYWRlciBvZiB0aGUgc2l0ZS4gKi99XG4gICAgICA8SGVhZENvbnRhaW5lcj5cbiAgICAgICAgPEhlYWRlciAvPlxuICAgICAgPC9IZWFkQ29udGFpbmVyPlxuICAgICAgey8qIDxCYW5uZXIgLz4gKi99XG5cbiAgICAgIHsvKiBQcm9sb2cgb25seSBzaG93IGluIGhvbWUgKi99XG4gICAgICB7LyogPFByb2xvZyB3aGVuPXtkYXRhLmxpbmtbXCIvXCJdfSAvPiAqL31cbiAgICAgIFxuICAgICAgey8qIEFkZCB0aGUgbWFpbiBzZWN0aW9uLiBJdCByZW5kZXJzIGEgZGlmZmVyZW50IGNvbXBvbmVudCBkZXBlbmRpbmdcbiAgICAgIG9uIHRoZSB0eXBlIG9mIFVSTCB3ZSBhcmUgaW4uICovfVxuICAgICAgPE1haW4+XG4gICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgPExvYWRpbmcgd2hlbj17ZGF0YS5pc0ZldGNoaW5nfSAvPlxuICAgICAgICAgIDxIb21lUGFnZSB3aGVuPXtkYXRhLmlzSG9tZX0gLz5cbiAgICAgICAgICA8TGlzdCB3aGVuPXtkYXRhLmlzQXJjaGl2ZX0gLz5cbiAgICAgICAgICA8UGFnZSB3aGVuPXtkYXRhLmlzUGFnZX0gLz5cbiAgICAgICAgICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdFR5cGV9IC8+XG4gICAgICAgICAgPFBhZ2VFcnJvciB3aGVuPXtkYXRhLmlzRXJyb3J9IC8+XG4gICAgICAgIDwvU3dpdGNoPlxuICAgICAgPC9NYWluPlxuXG4gICAgICB7LyogRm9vdGVyICAqL31cbiAgICAgIDxGb290ZXJDb250YWluZXI+XG4gICAgICAgIDxGb290ZXIgLz5cbiAgICAgIDwvRm9vdGVyQ29udGFpbmVyPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChUaGVtZSk7XG5cbi8vIGNvbnN0IGdsb2JhbFN0eWxlcyA9IGNzc2BgOyAgU2VtZW50YXJhIGRpYWxpaGthbiBrZSBmb2xkZXIgYXNzZXRzL2Nzc1xuXG5jb25zdCBIZWFkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbmA7XG5cbi8vIFByb2xvZyB3ZWIgXG5cbmNvbnN0IE1haW4gPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLy8gYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxuICAvLyAgIDE4MGRlZyxcbiAgLy8gICByZ2JhKDY2LCAxNzQsIDIyOCwgMC4xKSxcbiAgLy8gICByZ2JhKDY2LCAxNzQsIDIyOCwgMClcbiAgLy8gKTtcbmA7XG5cbmNvbnN0IEZvb3RlckNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbmA7XG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const FooterContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1nzqhd60\",label:\"FooterContainer\"})( false?undefined:{name:\"mr465y\",styles:\"justify-content:center;display:flex;flex-direction:column\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFjL05vZGVwcm9qZWN0cy93cGZyb250L3BhY2thZ2VzL21hcnMtdGhlbWUvc3JjL2NvbXBvbmVudHMvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEZrQyIsImZpbGUiOiIvVXNlcnMvaW1hYy9Ob2RlcHJvamVjdHMvd3Bmcm9udC9wYWNrYWdlcy9tYXJzLXRoZW1lL3NyYy9jb21wb25lbnRzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR2xvYmFsLCBjc3MsIGNvbm5lY3QsIHN0eWxlZCwgSGVhZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFN3aXRjaCBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvc3dpdGNoXCI7XG5pbXBvcnQgSGVhZGVyIGZyb20gXCIuL2hlYWRlci9oZWFkZXJcIjtcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyL2Zvb3RlclwiO1xuaW1wb3J0IExpc3QgZnJvbSBcIi4vbGlzdFwiO1xuaW1wb3J0IFBvc3QgZnJvbSBcIi4vcG9zdFwiO1xuaW1wb3J0IFBhZ2UgZnJvbSBcIi4vcGFnZXMvcGFnZVwiO1xuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4vbG9hZGluZ1wiO1xuaW1wb3J0IFRpdGxlIGZyb20gXCIuL3RpdGxlXCI7XG5pbXBvcnQgSG9tZVBhZ2UgZnJvbSBcIi4vcGFnZXNcIjtcbmltcG9ydCBQYWdlRXJyb3IgZnJvbSBcIi4vcGFnZS1lcnJvclwiO1xuaW1wb3J0IFN0eWxpbmcgZnJvbSBcIi4uL2Fzc2V0cy9jc3NcIjtcbmltcG9ydCBQcm9sb2cgZnJvbSBcIi4vcHJvbG9nXCI7XG5pbXBvcnQgQmFubmVyIGZyb20gXCIuL2Jhbm5lclwiO1xuXG4vKipcbiAqIFRoZW1lIGlzIHRoZSByb290IFJlYWN0IGNvbXBvbmVudCBvZiBvdXIgdGhlbWUuIFRoZSBvbmUgd2Ugd2lsbCBleHBvcnRcbiAqIGluIHJvb3RzLlxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIFRoZSBwcm9wcyBpbmplY3RlZCBieSBGcm9udGl0eSdzIHtAbGluayBjb25uZWN0fSBIT0MuXG4gKlxuICogQHJldHVybnMgVGhlIHRvcC1sZXZlbCByZWFjdCBjb21wb25lbnQgcmVwcmVzZW50aW5nIHRoZSB0aGVtZS5cbiAqL1xuY29uc3QgVGhlbWUgPSAoeyBzdGF0ZSB9KSA9PiB7XG4gIC8vIEdldCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY3VycmVudCBVUkwuXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7LyogQWRkIHNvbWUgbWV0YXRhZ3MgdG8gdGhlIDxoZWFkPiBvZiB0aGUgSFRNTC4gKi99XG4gICAgICA8VGl0bGUgLz5cbiAgICAgIDxIZWFkPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PXtzdGF0ZS5mcm9udGl0eS5kZXNjcmlwdGlvbn0gLz5cbiAgICAgICAgPGh0bWwgbGFuZz1cImVuXCIgLz5cbiAgICAgIDwvSGVhZD5cblxuICAgICAgey8qIEFkZCBzb21lIGdsb2JhbCBzdHlsZXMgZm9yIHRoZSB3aG9sZSBzaXRlLCBsaWtlIGJvZHkgb3IgYSdzLiBcbiAgICAgIE5vdCBjbGFzc2VzIGhlcmUgYmVjYXVzZSB3ZSB1c2UgQ1NTLWluLUpTLiBPbmx5IGdsb2JhbCBIVE1MIHRhZ3MuICovfVxuICAgICAgey8qIDxHbG9iYWwgc3R5bGVzPXtnbG9iYWxTdHlsZXN9IC8+ICAqL31cbiAgICAgIDxTdHlsaW5nIC8+XG5cbiAgICAgIHsvKiBBZGQgdGhlIGhlYWRlciBvZiB0aGUgc2l0ZS4gKi99XG4gICAgICA8SGVhZENvbnRhaW5lcj5cbiAgICAgICAgPEhlYWRlciAvPlxuICAgICAgPC9IZWFkQ29udGFpbmVyPlxuICAgICAgey8qIDxCYW5uZXIgLz4gKi99XG5cbiAgICAgIHsvKiBQcm9sb2cgb25seSBzaG93IGluIGhvbWUgKi99XG4gICAgICB7LyogPFByb2xvZyB3aGVuPXtkYXRhLmxpbmtbXCIvXCJdfSAvPiAqL31cbiAgICAgIFxuICAgICAgey8qIEFkZCB0aGUgbWFpbiBzZWN0aW9uLiBJdCByZW5kZXJzIGEgZGlmZmVyZW50IGNvbXBvbmVudCBkZXBlbmRpbmdcbiAgICAgIG9uIHRoZSB0eXBlIG9mIFVSTCB3ZSBhcmUgaW4uICovfVxuICAgICAgPE1haW4+XG4gICAgICAgIDxTd2l0Y2g+XG4gICAgICAgICAgPExvYWRpbmcgd2hlbj17ZGF0YS5pc0ZldGNoaW5nfSAvPlxuICAgICAgICAgIDxIb21lUGFnZSB3aGVuPXtkYXRhLmlzSG9tZX0gLz5cbiAgICAgICAgICA8TGlzdCB3aGVuPXtkYXRhLmlzQXJjaGl2ZX0gLz5cbiAgICAgICAgICA8UGFnZSB3aGVuPXtkYXRhLmlzUGFnZX0gLz5cbiAgICAgICAgICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdFR5cGV9IC8+XG4gICAgICAgICAgPFBhZ2VFcnJvciB3aGVuPXtkYXRhLmlzRXJyb3J9IC8+XG4gICAgICAgIDwvU3dpdGNoPlxuICAgICAgPC9NYWluPlxuXG4gICAgICB7LyogRm9vdGVyICAqL31cbiAgICAgIDxGb290ZXJDb250YWluZXI+XG4gICAgICAgIDxGb290ZXIgLz5cbiAgICAgIDwvRm9vdGVyQ29udGFpbmVyPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChUaGVtZSk7XG5cbi8vIGNvbnN0IGdsb2JhbFN0eWxlcyA9IGNzc2BgOyAgU2VtZW50YXJhIGRpYWxpaGthbiBrZSBmb2xkZXIgYXNzZXRzL2Nzc1xuXG5jb25zdCBIZWFkQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbmA7XG5cbi8vIFByb2xvZyB3ZWIgXG5cbmNvbnN0IE1haW4gPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgLy8gYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KFxuICAvLyAgIDE4MGRlZyxcbiAgLy8gICByZ2JhKDY2LCAxNzQsIDIyOCwgMC4xKSxcbiAgLy8gICByZ2JhKDY2LCAxNzQsIDIyOCwgMClcbiAgLy8gKTtcbmA7XG5cbmNvbnN0IEZvb3RlckNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbmA7XG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9tYXJzLXRoZW1lL3NyYy9jb21wb25lbnRzL2luZGV4LmpzPzgxYTYiXSwibmFtZXMiOlsiVGhlbWUiLCJzdGF0ZSIsImRhdGEiLCJzb3VyY2UiLCJnZXQiLCJyb3V0ZXIiLCJsaW5rIiwiZnJvbnRpdHkiLCJkZXNjcmlwdGlvbiIsImlzRmV0Y2hpbmciLCJpc0hvbWUiLCJpc0FyY2hpdmUiLCJpc1BhZ2UiLCJpc1Bvc3RUeXBlIiwiaXNFcnJvciIsImNvbm5lY3QiLCJIZWFkQ29udGFpbmVyIiwiTWFpbiIsIkZvb3RlckNvbnRhaW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztxUkFlQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQ0EsS0FBTUEsTUFBSyxDQUFHLENBQUMsQ0FBRUMsS0FBRixDQUFELEdBQWUsQ0FDM0I7QUFDQSxLQUFNQyxLQUFJLENBQUdELEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxHQUFiLENBQWlCSCxLQUFLLENBQUNJLE1BQU4sQ0FBYUMsSUFBOUIsQ0FBYixDQUVBLE1BQ0UsMEpBRUUsd0VBQUMsOENBQUQsSUFGRixDQUdFLHlFQUFDLDZDQUFELFlBQ0UsZ0ZBQU0sSUFBSSxDQUFDLGFBQVgsQ0FBeUIsT0FBTyxDQUFFTCxLQUFLLENBQUNNLFFBQU4sQ0FBZUMsV0FBakQsRUFERixDQUVFLGdGQUFNLElBQUksQ0FBQyxJQUFYLEVBRkYsR0FIRixDQVdFLHdFQUFDLG9EQUFELElBWEYsQ0FjRSx3RUFBQyxhQUFELFdBQ0Usd0VBQUMsc0RBQUQsSUFERixFQWRGLENBd0JFLHdFQUFDLElBQUQsV0FDRSx5RUFBQyxtRUFBRCxZQUNFLHdFQUFDLGdEQUFELEVBQVMsSUFBSSxDQUFFTixJQUFJLENBQUNPLFVBQXBCLEVBREYsQ0FFRSx3RUFBQywrQ0FBRCxFQUFVLElBQUksQ0FBRVAsSUFBSSxDQUFDUSxNQUFyQixFQUZGLENBR0Usd0VBQUMsNkNBQUQsRUFBTSxJQUFJLENBQUVSLElBQUksQ0FBQ1MsU0FBakIsRUFIRixDQUlFLHdFQUFDLG1EQUFELEVBQU0sSUFBSSxDQUFFVCxJQUFJLENBQUNVLE1BQWpCLEVBSkYsQ0FLRSx3RUFBQyw2Q0FBRCxFQUFNLElBQUksQ0FBRVYsSUFBSSxDQUFDVyxVQUFqQixFQUxGLENBTUUsd0VBQUMsb0RBQUQsRUFBVyxJQUFJLENBQUVYLElBQUksQ0FBQ1ksT0FBdEIsRUFORixHQURGLEVBeEJGLENBb0NFLHdFQUFDLGVBQUQsV0FDRSx3RUFBQyxzREFBRCxJQURGLEVBcENGLEdBREYsQ0EwQ0QsQ0E5Q0QsQ0FnRGVDLHVIQUFPLENBQUNmLEtBQUQsQ0FBdEIsRUFFQTtBQUVBLEtBQU1nQixjQUFhLDB4SUFBbkIsQ0FPQTtBQUVBLEtBQU1DLEtBQUkscXVJQUFWLENBVUEsS0FBTUMsZ0JBQWUsc3dJQUFyQiIsImZpbGUiOiIuL3BhY2thZ2VzL21hcnMtdGhlbWUvc3JjL2NvbXBvbmVudHMvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHbG9iYWwsIGNzcywgY29ubmVjdCwgc3R5bGVkLCBIZWFkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgU3dpdGNoIGZyb20gXCJAZnJvbnRpdHkvY29tcG9uZW50cy9zd2l0Y2hcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4vaGVhZGVyL2hlYWRlclwiO1xuaW1wb3J0IEZvb3RlciBmcm9tIFwiLi9mb290ZXIvZm9vdGVyXCI7XG5pbXBvcnQgTGlzdCBmcm9tIFwiLi9saXN0XCI7XG5pbXBvcnQgUG9zdCBmcm9tIFwiLi9wb3N0XCI7XG5pbXBvcnQgUGFnZSBmcm9tIFwiLi9wYWdlcy9wYWdlXCI7XG5pbXBvcnQgTG9hZGluZyBmcm9tIFwiLi9sb2FkaW5nXCI7XG5pbXBvcnQgVGl0bGUgZnJvbSBcIi4vdGl0bGVcIjtcbmltcG9ydCBIb21lUGFnZSBmcm9tIFwiLi9wYWdlc1wiO1xuaW1wb3J0IFBhZ2VFcnJvciBmcm9tIFwiLi9wYWdlLWVycm9yXCI7XG5pbXBvcnQgU3R5bGluZyBmcm9tIFwiLi4vYXNzZXRzL2Nzc1wiO1xuaW1wb3J0IFByb2xvZyBmcm9tIFwiLi9wcm9sb2dcIjtcbmltcG9ydCBCYW5uZXIgZnJvbSBcIi4vYmFubmVyXCI7XG5cbi8qKlxuICogVGhlbWUgaXMgdGhlIHJvb3QgUmVhY3QgY29tcG9uZW50IG9mIG91ciB0aGVtZS4gVGhlIG9uZSB3ZSB3aWxsIGV4cG9ydFxuICogaW4gcm9vdHMuXG4gKlxuICogQHBhcmFtIHByb3BzIC0gVGhlIHByb3BzIGluamVjdGVkIGJ5IEZyb250aXR5J3Mge0BsaW5rIGNvbm5lY3R9IEhPQy5cbiAqXG4gKiBAcmV0dXJucyBUaGUgdG9wLWxldmVsIHJlYWN0IGNvbXBvbmVudCByZXByZXNlbnRpbmcgdGhlIHRoZW1lLlxuICovXG5jb25zdCBUaGVtZSA9ICh7IHN0YXRlIH0pID0+IHtcbiAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIHsvKiBBZGQgc29tZSBtZXRhdGFncyB0byB0aGUgPGhlYWQ+IG9mIHRoZSBIVE1MLiAqL31cbiAgICAgIDxUaXRsZSAvPlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9e3N0YXRlLmZyb250aXR5LmRlc2NyaXB0aW9ufSAvPlxuICAgICAgICA8aHRtbCBsYW5nPVwiZW5cIiAvPlxuICAgICAgPC9IZWFkPlxuXG4gICAgICB7LyogQWRkIHNvbWUgZ2xvYmFsIHN0eWxlcyBmb3IgdGhlIHdob2xlIHNpdGUsIGxpa2UgYm9keSBvciBhJ3MuIFxuICAgICAgTm90IGNsYXNzZXMgaGVyZSBiZWNhdXNlIHdlIHVzZSBDU1MtaW4tSlMuIE9ubHkgZ2xvYmFsIEhUTUwgdGFncy4gKi99XG4gICAgICB7LyogPEdsb2JhbCBzdHlsZXM9e2dsb2JhbFN0eWxlc30gLz4gICovfVxuICAgICAgPFN0eWxpbmcgLz5cblxuICAgICAgey8qIEFkZCB0aGUgaGVhZGVyIG9mIHRoZSBzaXRlLiAqL31cbiAgICAgIDxIZWFkQ29udGFpbmVyPlxuICAgICAgICA8SGVhZGVyIC8+XG4gICAgICA8L0hlYWRDb250YWluZXI+XG4gICAgICB7LyogPEJhbm5lciAvPiAqL31cblxuICAgICAgey8qIFByb2xvZyBvbmx5IHNob3cgaW4gaG9tZSAqL31cbiAgICAgIHsvKiA8UHJvbG9nIHdoZW49e2RhdGEubGlua1tcIi9cIl19IC8+ICovfVxuICAgICAgXG4gICAgICB7LyogQWRkIHRoZSBtYWluIHNlY3Rpb24uIEl0IHJlbmRlcnMgYSBkaWZmZXJlbnQgY29tcG9uZW50IGRlcGVuZGluZ1xuICAgICAgb24gdGhlIHR5cGUgb2YgVVJMIHdlIGFyZSBpbi4gKi99XG4gICAgICA8TWFpbj5cbiAgICAgICAgPFN3aXRjaD5cbiAgICAgICAgICA8TG9hZGluZyB3aGVuPXtkYXRhLmlzRmV0Y2hpbmd9IC8+XG4gICAgICAgICAgPEhvbWVQYWdlIHdoZW49e2RhdGEuaXNIb21lfSAvPlxuICAgICAgICAgIDxMaXN0IHdoZW49e2RhdGEuaXNBcmNoaXZlfSAvPlxuICAgICAgICAgIDxQYWdlIHdoZW49e2RhdGEuaXNQYWdlfSAvPlxuICAgICAgICAgIDxQb3N0IHdoZW49e2RhdGEuaXNQb3N0VHlwZX0gLz5cbiAgICAgICAgICA8UGFnZUVycm9yIHdoZW49e2RhdGEuaXNFcnJvcn0gLz5cbiAgICAgICAgPC9Td2l0Y2g+XG4gICAgICA8L01haW4+XG5cbiAgICAgIHsvKiBGb290ZXIgICovfVxuICAgICAgPEZvb3RlckNvbnRhaW5lcj5cbiAgICAgICAgPEZvb3RlciAvPlxuICAgICAgPC9Gb290ZXJDb250YWluZXI+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRoZW1lKTtcblxuLy8gY29uc3QgZ2xvYmFsU3R5bGVzID0gY3NzYGA7ICBTZW1lbnRhcmEgZGlhbGloa2FuIGtlIGZvbGRlciBhc3NldHMvY3NzXG5cbmNvbnN0IEhlYWRDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmO1xuYDtcblxuLy8gUHJvbG9nIHdlYiBcblxuY29uc3QgTWFpbiA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAvLyBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoXG4gIC8vICAgMTgwZGVnLFxuICAvLyAgIHJnYmEoNjYsIDE3NCwgMjI4LCAwLjEpLFxuICAvLyAgIHJnYmEoNjYsIDE3NCwgMjI4LCAwKVxuICAvLyApO1xuYDtcblxuY29uc3QgRm9vdGVyQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuYDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/index.js\n");

/***/ }),

/***/ "./packages/mars-theme/src/components/pages/page.js":
/*!**********************************************************!*\
  !*** ./packages/mars-theme/src/components/pages/page.js ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../link */ \"./packages/mars-theme/src/components/link.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../list */ \"./packages/mars-theme/src/components/list/index.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * The Post component that Mars uses to render any kind of \"post type\", like\n * posts, pages, attachments, etc.\n *\n * It doesn't receive any prop but the Frontity store, which it receives from\n * {@link connect}. The current Frontity state is used to know which post type\n * should be rendered.\n *\n * @param props - The Frontity store (state, actions, and libraries).\n *\n * @example\n * ```js\n * <Switch>\n *   <Post when={data.isPostType} />\n * </Switch>\n * ```\n *\n * @returns The {@link Post} element rendered.\n */const Page=({state,actions,libraries})=>{// Get information about the current URL.\nconst data=state.source.get(state.router.link);// Get the data of the post.\nconst page=state.source[data.type][data.id];// Get the html2react component.\nconst Html2React=libraries.html2react.Component;/**\n   * Once the post has loaded in the DOM, prefetch both the\n   * home posts and the list component so if the user visits\n   * the home page, everything is ready and it loads instantly.\n   */Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(()=>{actions.source.fetch(\"/\");_list__WEBPACK_IMPORTED_MODULE_3__[\"default\"].preload();},[]);// Load the post, but only if the data is ready.\nreturn data.isReady?Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(ArticleContainer,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(TitleAlign,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Title,{dangerouslySetInnerHTML:{__html:page.title.rendered}})}),\"// Render the content using the Html2React component so the HTML is // processed by the processors we included in the // libraries.html2react.processors array.\",Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Content,{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Html2React,{html:page.content.rendered})})]}):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Page));const ArticleContainer=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1fcq0a56\",label:\"ArticleContainer\"})( false?undefined:{name:\"8m5738\",styles:\"width:100%;max-width:960px;margin:0 auto;padding:14px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const TitleAlign=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1fcq0a55\",label:\"TitleAlign\"})( false?undefined:{name:\"1azakc\",styles:\"text-align:center\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFjL05vZGVwcm9qZWN0cy93cGZyb250L3BhY2thZ2VzL21hcnMtdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZXMvcGFnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpRzZCIiwiZmlsZSI6Ii9Vc2Vycy9pbWFjL05vZGVwcm9qZWN0cy93cGZyb250L3BhY2thZ2VzL21hcnMtdGhlbWUvc3JjL2NvbXBvbmVudHMvcGFnZXMvcGFnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi4vbGlua1wiO1xuaW1wb3J0IExpc3QgZnJvbSBcIi4uL2xpc3RcIjtcblxuLyoqXG4gKiBUaGUgUG9zdCBjb21wb25lbnQgdGhhdCBNYXJzIHVzZXMgdG8gcmVuZGVyIGFueSBraW5kIG9mIFwicG9zdCB0eXBlXCIsIGxpa2VcbiAqIHBvc3RzLCBwYWdlcywgYXR0YWNobWVudHMsIGV0Yy5cbiAqXG4gKiBJdCBkb2Vzbid0IHJlY2VpdmUgYW55IHByb3AgYnV0IHRoZSBGcm9udGl0eSBzdG9yZSwgd2hpY2ggaXQgcmVjZWl2ZXMgZnJvbVxuICoge0BsaW5rIGNvbm5lY3R9LiBUaGUgY3VycmVudCBGcm9udGl0eSBzdGF0ZSBpcyB1c2VkIHRvIGtub3cgd2hpY2ggcG9zdCB0eXBlXG4gKiBzaG91bGQgYmUgcmVuZGVyZWQuXG4gKlxuICogQHBhcmFtIHByb3BzIC0gVGhlIEZyb250aXR5IHN0b3JlIChzdGF0ZSwgYWN0aW9ucywgYW5kIGxpYnJhcmllcykuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYGpzXG4gKiA8U3dpdGNoPlxuICogICA8UG9zdCB3aGVuPXtkYXRhLmlzUG9zdFR5cGV9IC8+XG4gKiA8L1N3aXRjaD5cbiAqIGBgYFxuICpcbiAqIEByZXR1cm5zIFRoZSB7QGxpbmsgUG9zdH0gZWxlbWVudCByZW5kZXJlZC5cbiAqL1xuY29uc3QgUGFnZSA9ICh7IHN0YXRlLCBhY3Rpb25zLCBsaWJyYXJpZXMgfSkgPT4ge1xuICAvLyBHZXQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgVVJMLlxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vIEdldCB0aGUgZGF0YSBvZiB0aGUgcG9zdC5cbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuXG4gIC8vIEdldCB0aGUgaHRtbDJyZWFjdCBjb21wb25lbnQuXG4gIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cbiAgLyoqXG4gICAqIE9uY2UgdGhlIHBvc3QgaGFzIGxvYWRlZCBpbiB0aGUgRE9NLCBwcmVmZXRjaCBib3RoIHRoZVxuICAgKiBob21lIHBvc3RzIGFuZCB0aGUgbGlzdCBjb21wb25lbnQgc28gaWYgdGhlIHVzZXIgdmlzaXRzXG4gICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICovXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgYWN0aW9ucy5zb3VyY2UuZmV0Y2goXCIvXCIpO1xuICAgIExpc3QucHJlbG9hZCgpO1xuICB9LCBbXSk7XG5cbiAgLy8gTG9hZCB0aGUgcG9zdCwgYnV0IG9ubHkgaWYgdGhlIGRhdGEgaXMgcmVhZHkuXG4gIHJldHVybiBkYXRhLmlzUmVhZHkgPyAoXG4gICAgPEFydGljbGVDb250YWluZXI+XG4gICAgICA8VGl0bGVBbGlnbj5cbiAgICAgICAgPFRpdGxlIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogcGFnZS50aXRsZS5yZW5kZXJlZCB9fSAvPlxuXG4gICAgICAgIHsvKiBIaWRlIGF1dGhvciBhbmQgZGF0ZSBvbiBwYWdlc1xuICAgICAgICB7IWRhdGEuaXNQYWdlICYmIChcbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAge2F1dGhvciAmJiAoXG4gICAgICAgICAgICAgIDxTdHlsZWRMaW5rIGxpbms9e2F1dGhvci5saW5rfT5cbiAgICAgICAgICAgICAgICA8QXV0aG9yPlxuICAgICAgICAgICAgICAgICAgRWRpdG9yOiA8Yj57YXV0aG9yLm5hbWV9PC9iPlxuICAgICAgICAgICAgICAgIDwvQXV0aG9yPlxuICAgICAgICAgICAgICA8L1N0eWxlZExpbms+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPERhdGVXcmFwcGVyPlxuICAgICAgICAgICAgICB7XCIgXCJ9XG4gICAgICAgICAgICAgIG9uIDxiPntkYXRlLnRvRGF0ZVN0cmluZygpfTwvYj5cbiAgICAgICAgICAgIDwvRGF0ZVdyYXBwZXI+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICl9ICovfVxuICAgICAgPC9UaXRsZUFsaWduPlxuICAgICAgey8qIExvb2sgYXQgdGhlIHNldHRpbmdzIHRvIHNlZSBpZiB3ZSBzaG91bGQgaW5jbHVkZSB0aGUgZmVhdHVyZWQgaW1hZ2UgKi99XG4gICAgICB7Lyoge3N0YXRlLnRoZW1lLmZlYXR1cmVkLnNob3dPblBvc3QgJiYgKFxuICAgICAgICA8RmVhdHVyZWRNZWRpYSBpZD17cG9zdC5mZWF0dXJlZF9tZWRpYX0gLz5cbiAgICAgICl9ICovfVxuXG5cbiAgICAgIHsvKiB7ZGF0YS5pc0F0dGFjaG1lbnQgPyAoXG4gICAgICAgIC8vIElmIHRoZSBwb3N0IGlzIGFuIGF0dGFjaG1lbnQsIGp1c3QgcmVuZGVyIHRoZSBkZXNjcmlwdGlvbiBwcm9wZXJ0eSxcbiAgICAgICAgLy8gd2hpY2ggYWxyZWFkeSBjb250YWlucyB0aGUgdGh1bWJuYWlsLlxuICAgICAgICA8ZGl2IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogcG9zdC5kZXNjcmlwdGlvbi5yZW5kZXJlZCB9fSAvPlxuICAgICAgKSA6ICggKi99XG4gICAgICAgIC8vIFJlbmRlciB0aGUgY29udGVudCB1c2luZyB0aGUgSHRtbDJSZWFjdCBjb21wb25lbnQgc28gdGhlIEhUTUwgaXNcbiAgICAgICAgLy8gcHJvY2Vzc2VkIGJ5IHRoZSBwcm9jZXNzb3JzIHdlIGluY2x1ZGVkIGluIHRoZVxuICAgICAgICAvLyBsaWJyYXJpZXMuaHRtbDJyZWFjdC5wcm9jZXNzb3JzIGFycmF5LlxuICAgICAgICA8Q29udGVudD5cbiAgICAgICAgICA8SHRtbDJSZWFjdCBodG1sPXtwYWdlLmNvbnRlbnQucmVuZGVyZWR9IC8+XG4gICAgICAgIDwvQ29udGVudD5cbiAgICAgIHsvKiApfSAqL31cbiAgICA8L0FydGljbGVDb250YWluZXI+XG4gICkgOiBudWxsO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChQYWdlKTtcblxuY29uc3QgQXJ0aWNsZUNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOjEwMCU7XG4gIG1heC13aWR0aDogOTYwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nOiAxNHB4O1xuYDtcblxuY29uc3QgVGl0bGVBbGlnbiA9IHN0eWxlZC5kaXZgXG4gIHRleHQtYWxpZ246Y2VudGVyO1xuYDtcblxuY29uc3QgVGl0bGUgPSBzdHlsZWQuaDNgXG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLXRvcDogMjRweDtcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xuYDtcblxuY29uc3QgU3R5bGVkTGluayA9IHN0eWxlZChMaW5rKWBcbiAgcGFkZGluZzogMTVweCAwO1xuYDtcblxuY29uc3QgQXV0aG9yID0gc3R5bGVkLnBgXG4gIGNvbG9yOiAjNjY2NjY2O1xuICBmb250LXNpemU6IDAuOWVtO1xuICBkaXNwbGF5OiBpbmxpbmU7XG5gO1xuXG5jb25zdCBEYXRlV3JhcHBlciA9IHN0eWxlZC5wYFxuICBjb2xvcjogIzY2NjY2NjtcbiAgZm9udC1zaXplOiAwLjllbTtcbiAgZGlzcGxheTogaW5saW5lO1xuYDtcblxuLyoqXG4gKiBUaGlzIGNvbXBvbmVudCBpcyB0aGUgcGFyZW50IG9mIHRoZSBgY29udGVudC5yZW5kZXJlZGAgSFRNTC4gV2UgY2FuIHVzZSBuZXN0ZWRcbiAqIHNlbGVjdG9ycyB0byBzdHlsZSB0aGF0IEhUTUwuXG4gKi9cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICAqIHtcbiAgICBtYXgtd2lkdGg6IDYyNHB4O1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogYXV0bztcbiAgfVxuXG4gIHAge1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU1ZW07XG4gICAgZm9udC1zaXplOiAxLjA1ZW07XG4gICAgbWFyZ2luOiAuMmVtIGF1dG8gMS4xZW07XG4gIH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICB9XG5cbiAgZmlndXJlIHtcbiAgICBtYXJnaW46IDI0cHggYXV0bztcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIGZpZ2NhcHRpb24ge1xuICAgICAgZm9udC1zaXplOiAwLjdlbTtcbiAgICB9XG4gIH1cblxuICBpZnJhbWUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogYXV0bztcbiAgfVxuXG4gIGJsb2NrcXVvdGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW46IDE2cHggYXV0bztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCByZ2JhKDEyLCAxNywgNDMpO1xuICAgIHBhZGRpbmc6IDRweCAxNnB4O1xuICB9XG5cbiAgYSB7XG4gICAgY29sb3I6IHJnYigzMSwgNTYsIDE5Nyk7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIH1cblxuICAvKiBJbnB1dCBmaWVsZHMgc3R5bGVzICovXG5cbiAgaW5wdXRbdHlwZT1cInRleHRcIl0sXG4gIGlucHV0W3R5cGU9XCJlbWFpbFwiXSxcbiAgaW5wdXRbdHlwZT1cInVybFwiXSxcbiAgaW5wdXRbdHlwZT1cInRlbFwiXSxcbiAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSxcbiAgaW5wdXRbdHlwZT1cImRhdGVcIl0sXG4gIHRleHRhcmVhLFxuICBzZWxlY3Qge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHBhZGRpbmc6IDZweCAxMnB4O1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XG4gICAgY29sb3I6ICM0OTUwNTc7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IHBhZGRpbmctYm94O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjZWQ0ZGE7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIG91dGxpbmUtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIHRyYW5zaXRpb246IG91dGxpbmUtY29sb3IgMC4xNXMgZWFzZS1pbi1vdXQsIGJveC1zaGFkb3cgMC4xNXMgZWFzZS1pbi1vdXQ7XG4gICAgbWFyZ2luOiA4cHggMCA0cHggMDtcblxuICAgICY6Zm9jdXMge1xuICAgICAgb3V0bGluZS1jb2xvcjogIzFmMzhjNTtcbiAgICB9XG4gIH1cblxuICBpbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgbWFyZ2luLWJvdHRvbTogMDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gICAgLW1zLXRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICMxZjM4YzU7XG4gICAgcGFkZGluZzogMTJweCAzNnB4O1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBsaW5lLWhlaWdodDogMS40Mjg1NzE0MztcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFmMzhjNTtcbiAgfVxuXG4gIC8qIFdvcmRQcmVzcyBDb3JlIEFsaWduIENsYXNzZXMgKi9cblxuICBAbWVkaWEgKG1pbi13aWR0aDogNDIwcHgpIHtcbiAgICBpbWcuYWxpZ25jZW50ZXIsXG4gICAgaW1nLmFsaWdubGVmdCxcbiAgICBpbWcuYWxpZ25yaWdodCB7XG4gICAgICB3aWR0aDogYXV0bztcbiAgICB9XG5cbiAgICAuYWxpZ25jZW50ZXIge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB9XG5cbiAgICAuYWxpZ25yaWdodCB7XG4gICAgICBmbG9hdDogcmlnaHQ7XG4gICAgICBtYXJnaW4tbGVmdDogMjRweDtcbiAgICB9XG5cbiAgICAuYWxpZ25sZWZ0IHtcbiAgICAgIGZsb2F0OiBsZWZ0O1xuICAgICAgbWFyZ2luLXJpZ2h0OiAyNHB4O1xuICAgIH1cbiAgfVxuYDtcbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Title=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"h3\", false?undefined:{target:\"e1fcq0a54\",label:\"Title\"})( false?undefined:{name:\"ymdyv3\",styles:\"margin:0;margin-top:24px;margin-bottom:4px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const StyledLink=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(_link__WEBPACK_IMPORTED_MODULE_2__[\"default\"], false?undefined:{target:\"e1fcq0a53\",label:\"StyledLink\"})( false?undefined:{name:\"1k93czn\",styles:\"padding:15px 0\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Author=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"p\", false?undefined:{target:\"e1fcq0a52\",label:\"Author\"})( false?undefined:{name:\"1i1qai6\",styles:\"color:#666666;font-size:0.9em;display:inline\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const DateWrapper=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"p\", false?undefined:{target:\"e1fcq0a51\",label:\"DateWrapper\"})( false?undefined:{name:\"1i1qai6\",styles:\"color:#666666;font-size:0.9em;display:inline\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});/**\n * This component is the parent of the `content.rendered` HTML. We can use nested\n * selectors to style that HTML.\n */const Content=Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1fcq0a50\",label:\"Content\"})( false?undefined:{name:\"4koa2a\",styles:\"word-break:break-word;margin-top:30px;*{max-width:624px;width:100%;margin:auto;}p{line-height:1.55em;font-size:1.05em;margin:.2em auto 1.1em;}img{width:100%;object-fit:cover;object-position:center;}figure{margin:24px auto;width:100%;figcaption{font-size:0.7em;}}iframe{display:block;margin:auto;}blockquote{text-align:center;margin:16px auto;background-color:rgba(0, 0, 0, 0.1);border-left:4px solid rgba(12, 17, 43);padding:4px 16px;}a{color:rgb(31, 56, 197);text-decoration:underline;}input[type=\\\"text\\\"],input[type=\\\"email\\\"],input[type=\\\"url\\\"],input[type=\\\"tel\\\"],input[type=\\\"number\\\"],input[type=\\\"date\\\"],textarea,select{display:block;padding:6px 12px;font-size:16px;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:4px;outline-color:transparent;transition:outline-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;margin:8px 0 4px 0;&:focus{outline-color:#1f38c5;}}input[type=\\\"submit\\\"]{display:inline-block;margin-bottom:0;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;background-image:none;border:1px solid #1f38c5;padding:12px 36px;font-size:14px;line-height:1.42857143;border-radius:4px;color:#fff;background-color:#1f38c5;}@media (min-width: 420px){img.aligncenter,img.alignleft,img.alignright{width:auto;}.aligncenter{display:block;margin-left:auto;margin-right:auto;}.alignright{float:right;margin-left:24px;}.alignleft{float:left;margin-right:24px;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/pages/page.js\n");

/***/ })

})