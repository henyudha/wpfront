webpackHotUpdate("wpfront",{

/***/ "./packages/mars-theme/src/components/post.js":
/*!****************************************************!*\
  !*** ./packages/mars-theme/src/components/post.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol.description.js */ \"./node_modules/core-js/modules/es.symbol.description.js\");\n/* harmony import */ var core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link */ \"./packages/mars-theme/src/components/link.js\");\n/* harmony import */ var _list__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./list */ \"./packages/mars-theme/src/components/list/index.js\");\n/* harmony import */ var _featured_media__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./featured-media */ \"./packages/mars-theme/src/components/featured-media.js\");\n/* harmony import */ var _list_list_item__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./list/list-item */ \"./packages/mars-theme/src/components/list/list-item.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/**\n * The Post component that Mars uses to render any kind of \"post type\", like\n * posts, pages, attachments, etc.\n *\n * It doesn't receive any prop but the Frontity store, which it receives from\n * {@link connect}. The current Frontity state is used to know which post type\n * should be rendered.\n *\n * @param props - The Frontity store (state, actions, and libraries).\n *\n * @example\n * ```js\n * <Switch>\n *   <Post when={data.isPostType} />\n * </Switch>\n * ```\n *\n * @returns The {@link Post} element rendered.\n */const Post=({state,actions,libraries})=>{// Get information about the current URL.\nconst data=state.source.get(state.router.link);// Get the data of the post.\nconst post=state.source[data.type][data.id];// Get the data of the author.\nconst author=state.source.author[post.author];// Get a human readable date.\nconst date=new Date(post.date);// Tampilkan tags\nconst tag=state.source.tag[post.tags];// Get the html2react component.\nconst Html2React=libraries.html2react.Component;/**\n   * Once the post has loaded in the DOM, prefetch both the\n   * home posts and the list component so if the user visits\n   * the home page, everything is ready and it loads instantly.\n   */Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(()=>{actions.source.fetch(\"/\");_list__WEBPACK_IMPORTED_MODULE_4__[\"default\"].preload();},[actions.source]);// Load the post, but only if the data is ready.\nreturn data.isReady?Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(Container,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(TitleAlign,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Title,{dangerouslySetInnerHTML:{__html:post.title.rendered}}),!data.isPage&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(\"div\",{children:[author&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(StyledLink,{link:author.link,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(Author,{children:[\"Editor: \",Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"b\",{children:author.name})]})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(DateWrapper,{children:[\" \",\"on \",Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"b\",{children:date.toDateString()})]})]})]}),state.theme.featured.showOnPost&&Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(_featured_media__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{id:post.featured_media}),data.isAttachment?// If the post is an attachment, just render the description property,\n// which already contains the thumbnail.\nObject(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:post.description.rendered}}):// Render the content using the Html2React component so the HTML is\n// processed by the processors we included in the\n// libraries.html2react.processors array.\nObject(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(Content,{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(Html2React,{html:post.content.rendered}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsx\"])(StyledLink,{link:tag.link,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_7__[\"jsxs\"])(Tag,{children:[\"Tags: \",tag.name]})})]})]}):null;};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Post));const Container=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"emgezev7\",label:\"Container\"})( false?undefined:{name:\"8m5738\",styles:\"width:100%;max-width:960px;margin:0 auto;padding:14px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const TitleAlign=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"emgezev6\",label:\"TitleAlign\"})( false?undefined:{name:\"1azakc\",styles:\"text-align:center\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pbWFjL05vZGVwcm9qZWN0cy93cGZyb250L3BhY2thZ2VzL21hcnMtdGhlbWUvc3JjL2NvbXBvbmVudHMvcG9zdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2RzZCIiwiZmlsZSI6Ii9Vc2Vycy9pbWFjL05vZGVwcm9qZWN0cy93cGZyb250L3BhY2thZ2VzL21hcnMtdGhlbWUvc3JjL2NvbXBvbmVudHMvcG9zdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgTGluayBmcm9tIFwiLi9saW5rXCI7XG5pbXBvcnQgTGlzdCBmcm9tIFwiLi9saXN0XCI7XG5pbXBvcnQgRmVhdHVyZWRNZWRpYSBmcm9tIFwiLi9mZWF0dXJlZC1tZWRpYVwiO1xuaW1wb3J0IGxpc3RJdGVtIGZyb20gXCIuL2xpc3QvbGlzdC1pdGVtXCI7XG5cbi8qKlxuICogVGhlIFBvc3QgY29tcG9uZW50IHRoYXQgTWFycyB1c2VzIHRvIHJlbmRlciBhbnkga2luZCBvZiBcInBvc3QgdHlwZVwiLCBsaWtlXG4gKiBwb3N0cywgcGFnZXMsIGF0dGFjaG1lbnRzLCBldGMuXG4gKlxuICogSXQgZG9lc24ndCByZWNlaXZlIGFueSBwcm9wIGJ1dCB0aGUgRnJvbnRpdHkgc3RvcmUsIHdoaWNoIGl0IHJlY2VpdmVzIGZyb21cbiAqIHtAbGluayBjb25uZWN0fS4gVGhlIGN1cnJlbnQgRnJvbnRpdHkgc3RhdGUgaXMgdXNlZCB0byBrbm93IHdoaWNoIHBvc3QgdHlwZVxuICogc2hvdWxkIGJlIHJlbmRlcmVkLlxuICpcbiAqIEBwYXJhbSBwcm9wcyAtIFRoZSBGcm9udGl0eSBzdG9yZSAoc3RhdGUsIGFjdGlvbnMsIGFuZCBsaWJyYXJpZXMpLlxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGBqc1xuICogPFN3aXRjaD5cbiAqICAgPFBvc3Qgd2hlbj17ZGF0YS5pc1Bvc3RUeXBlfSAvPlxuICogPC9Td2l0Y2g+XG4gKiBgYGBcbiAqXG4gKiBAcmV0dXJucyBUaGUge0BsaW5rIFBvc3R9IGVsZW1lbnQgcmVuZGVyZWQuXG4gKi9cbmNvbnN0IFBvc3QgPSAoeyBzdGF0ZSwgYWN0aW9ucywgbGlicmFyaWVzIH0pID0+IHtcbiAgLy8gR2V0IGluZm9ybWF0aW9uIGFib3V0IHRoZSBjdXJyZW50IFVSTC5cbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xuICAvLyBHZXQgdGhlIGRhdGEgb2YgdGhlIHBvc3QuXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgLy8gR2V0IHRoZSBkYXRhIG9mIHRoZSBhdXRob3IuXG4gIGNvbnN0IGF1dGhvciA9IHN0YXRlLnNvdXJjZS5hdXRob3JbcG9zdC5hdXRob3JdO1xuICAvLyBHZXQgYSBodW1hbiByZWFkYWJsZSBkYXRlLlxuICBjb25zdCBkYXRlID0gbmV3IERhdGUocG9zdC5kYXRlKTtcbiAgLy8gVGFtcGlsa2FuIHRhZ3NcbiAgY29uc3QgdGFnID0gc3RhdGUuc291cmNlLnRhZ1twb3N0LnRhZ3NdO1xuXG4gIC8vIEdldCB0aGUgaHRtbDJyZWFjdCBjb21wb25lbnQuXG4gIGNvbnN0IEh0bWwyUmVhY3QgPSBsaWJyYXJpZXMuaHRtbDJyZWFjdC5Db21wb25lbnQ7XG5cbiAgLyoqXG4gICAqIE9uY2UgdGhlIHBvc3QgaGFzIGxvYWRlZCBpbiB0aGUgRE9NLCBwcmVmZXRjaCBib3RoIHRoZVxuICAgKiBob21lIHBvc3RzIGFuZCB0aGUgbGlzdCBjb21wb25lbnQgc28gaWYgdGhlIHVzZXIgdmlzaXRzXG4gICAqIHRoZSBob21lIHBhZ2UsIGV2ZXJ5dGhpbmcgaXMgcmVhZHkgYW5kIGl0IGxvYWRzIGluc3RhbnRseS5cbiAgICovXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgYWN0aW9ucy5zb3VyY2UuZmV0Y2goXCIvXCIpO1xuICAgIExpc3QucHJlbG9hZCgpO1xuICB9LCBbYWN0aW9ucy5zb3VyY2VdKTtcblxuICAvLyBMb2FkIHRoZSBwb3N0LCBidXQgb25seSBpZiB0aGUgZGF0YSBpcyByZWFkeS5cbiAgcmV0dXJuIGRhdGEuaXNSZWFkeSA/IChcbiAgICA8Q29udGFpbmVyPlxuICAgICAgPFRpdGxlQWxpZ24+XG4gICAgICAgIDxUaXRsZSBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IHBvc3QudGl0bGUucmVuZGVyZWQgfX0gLz5cblxuICAgICAgICB7LyogSGlkZSBhdXRob3IgYW5kIGRhdGUgb24gcGFnZXMgKi99XG4gICAgICAgIHshZGF0YS5pc1BhZ2UgJiYgKFxuICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICB7YXV0aG9yICYmIChcbiAgICAgICAgICAgICAgPFN0eWxlZExpbmsgbGluaz17YXV0aG9yLmxpbmt9PlxuICAgICAgICAgICAgICAgIDxBdXRob3I+XG4gICAgICAgICAgICAgICAgICBFZGl0b3I6IDxiPnthdXRob3IubmFtZX08L2I+XG4gICAgICAgICAgICAgICAgPC9BdXRob3I+XG4gICAgICAgICAgICAgIDwvU3R5bGVkTGluaz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8RGF0ZVdyYXBwZXI+XG4gICAgICAgICAgICAgIHtcIiBcIn1cbiAgICAgICAgICAgICAgb24gPGI+e2RhdGUudG9EYXRlU3RyaW5nKCl9PC9iPlxuICAgICAgICAgICAgPC9EYXRlV3JhcHBlcj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKX1cbiAgICAgIDwvVGl0bGVBbGlnbj5cbiAgICAgIHsvKiBMb29rIGF0IHRoZSBzZXR0aW5ncyB0byBzZWUgaWYgd2Ugc2hvdWxkIGluY2x1ZGUgdGhlIGZlYXR1cmVkIGltYWdlICovfVxuICAgICAge3N0YXRlLnRoZW1lLmZlYXR1cmVkLnNob3dPblBvc3QgJiYgKFxuICAgICAgICA8RmVhdHVyZWRNZWRpYSBpZD17cG9zdC5mZWF0dXJlZF9tZWRpYX0gLz5cbiAgICAgICl9XG5cbiAgICAgIHtkYXRhLmlzQXR0YWNobWVudCA/IChcbiAgICAgICAgLy8gSWYgdGhlIHBvc3QgaXMgYW4gYXR0YWNobWVudCwganVzdCByZW5kZXIgdGhlIGRlc2NyaXB0aW9uIHByb3BlcnR5LFxuICAgICAgICAvLyB3aGljaCBhbHJlYWR5IGNvbnRhaW5zIHRoZSB0aHVtYm5haWwuXG4gICAgICAgIDxkaXYgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBwb3N0LmRlc2NyaXB0aW9uLnJlbmRlcmVkIH19IC8+XG4gICAgICApIDogKFxuICAgICAgICAvLyBSZW5kZXIgdGhlIGNvbnRlbnQgdXNpbmcgdGhlIEh0bWwyUmVhY3QgY29tcG9uZW50IHNvIHRoZSBIVE1MIGlzXG4gICAgICAgIC8vIHByb2Nlc3NlZCBieSB0aGUgcHJvY2Vzc29ycyB3ZSBpbmNsdWRlZCBpbiB0aGVcbiAgICAgICAgLy8gbGlicmFyaWVzLmh0bWwycmVhY3QucHJvY2Vzc29ycyBhcnJheS5cbiAgICAgICAgPENvbnRlbnQ+XG4gICAgICAgICAgPEh0bWwyUmVhY3QgaHRtbD17cG9zdC5jb250ZW50LnJlbmRlcmVkfSAvPlxuICAgICAgICAgIFxuICAgICAgICAgIHsvKiBNZW5hbXBpbGthbiBUYWdzICovfVxuICAgICAgICAgIDxTdHlsZWRMaW5rIGxpbms9e3RhZy5saW5rfT5cbiAgICAgICAgICAgIDxUYWc+VGFnczoge3RhZy5uYW1lfTwvVGFnPlxuICAgICAgICAgIDwvU3R5bGVkTGluaz5cbiAgICAgICAgPC9Db250ZW50PlxuICAgICAgKX1cbiAgICA8L0NvbnRhaW5lcj5cbiAgKSA6IG51bGw7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFBvc3QpO1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA5NjBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmc6IDE0cHg7XG5gO1xuXG5jb25zdCBUaXRsZUFsaWduID0gc3R5bGVkLmRpdmBcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuYDtcblxuY29uc3QgVGl0bGUgPSBzdHlsZWQuaDNgXG4gIG1hcmdpbjogMDtcbiAgbWFyZ2luLXRvcDogMjRweDtcbiAgbWFyZ2luLWJvdHRvbTogNHB4O1xuYDtcblxuY29uc3QgU3R5bGVkTGluayA9IHN0eWxlZChMaW5rKWBcbiAgcGFkZGluZzogMTVweCAwO1xuYDtcblxuY29uc3QgQXV0aG9yID0gc3R5bGVkLnBgXG4gIGNvbG9yOiAjNjY2NjY2O1xuICBmb250LXNpemU6IDAuOWVtO1xuICBkaXNwbGF5OiBpbmxpbmU7XG5gO1xuXG5jb25zdCBEYXRlV3JhcHBlciA9IHN0eWxlZC5wYFxuICBjb2xvcjogIzY2NjY2NjtcbiAgZm9udC1zaXplOiAwLjllbTtcbiAgZGlzcGxheTogaW5saW5lO1xuYDtcblxuY29uc3QgVGFnID0gc3R5bGVkLmRpdmBcbiAgY29sb3I6IGhzbCgxMTYsIDAlLCA0MCUpO1xuICBmb250LXNpemU6IDAuOWVtO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5gO1xuXG4vKipcbiAqIFRoaXMgY29tcG9uZW50IGlzIHRoZSBwYXJlbnQgb2YgdGhlIGBjb250ZW50LnJlbmRlcmVkYCBIVE1MLiBXZSBjYW4gdXNlIG5lc3RlZFxuICogc2VsZWN0b3JzIHRvIHN0eWxlIHRoYXQgSFRNTC5cbiAqL1xuY29uc3QgQ29udGVudCA9IHN0eWxlZC5kaXZgXG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gICoge1xuICAgIG1heC13aWR0aDogNjI0cHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWFyZ2luOiBhdXRvO1xuICB9XG5cbiAgcCB7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTVlbTtcbiAgICBmb250LXNpemU6IDEuMTVlbTtcbiAgICBtYXJnaW46IDAuMmVtIGF1dG8gMS4xZW07XG4gIH1cblxuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIG9iamVjdC1wb3NpdGlvbjogY2VudGVyO1xuICB9XG5cbiAgZmlndXJlIHtcbiAgICBtYXJnaW46IDI0cHggYXV0bztcbiAgICB3aWR0aDogMTAwJTtcblxuICAgIGZpZ2NhcHRpb24ge1xuICAgICAgZm9udC1zaXplOiAwLjdlbTtcbiAgICB9XG4gIH1cblxuICBpZnJhbWUge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogYXV0bztcbiAgfVxuXG4gIGJsb2NrcXVvdGUge1xuICAgIG1hcmdpbjogMTZweCBhdXRvO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBib3JkZXItbGVmdDogNHB4IHNvbGlkIHJnYmEoMTIsIDE3LCA0Myk7XG4gICAgcGFkZGluZzogNHB4IDE2cHg7XG4gIH1cblxuICBhIHtcbiAgICBjb2xvcjogcmdiKDMxLCA1NiwgMTk3KTtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgfVxuXG4gIC8qIElucHV0IGZpZWxkcyBzdHlsZXMgKi9cblxuICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgaW5wdXRbdHlwZT1cImVtYWlsXCJdLFxuICBpbnB1dFt0eXBlPVwidXJsXCJdLFxuICBpbnB1dFt0eXBlPVwidGVsXCJdLFxuICBpbnB1dFt0eXBlPVwibnVtYmVyXCJdLFxuICBpbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbiAgdGV4dGFyZWEsXG4gIHNlbGVjdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcGFkZGluZzogNnB4IDEycHg7XG4gICAgZm9udC1zaXplOiAxNnB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgICBjb2xvcjogIzQ5NTA1NztcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY2xpcDogcGFkZGluZy1ib3g7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NlZDRkYTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgb3V0bGluZS1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgdHJhbnNpdGlvbjogb3V0bGluZS1jb2xvciAwLjE1cyBlYXNlLWluLW91dCwgYm94LXNoYWRvdyAwLjE1cyBlYXNlLWluLW91dDtcbiAgICBtYXJnaW46IDhweCAwIDRweCAwO1xuXG4gICAgJjpmb2N1cyB7XG4gICAgICBvdXRsaW5lLWNvbG9yOiAjMWYzOGM1O1xuICAgIH1cbiAgfVxuXG4gIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICAtbXMtdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XG4gICAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzFmMzhjNTtcbiAgICBwYWRkaW5nOiAxMnB4IDM2cHg7XG4gICAgZm9udC1zaXplOiAxNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxLjQyODU3MTQzO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWYzOGM1O1xuICB9XG5cbiAgLyogV29yZFByZXNzIENvcmUgQWxpZ24gQ2xhc3NlcyAqL1xuXG4gIEBtZWRpYSAobWluLXdpZHRoOiA0MjBweCkge1xuICAgIGltZy5hbGlnbmNlbnRlcixcbiAgICBpbWcuYWxpZ25sZWZ0LFxuICAgIGltZy5hbGlnbnJpZ2h0IHtcbiAgICAgIHdpZHRoOiBhdXRvO1xuICAgIH1cblxuICAgIC5hbGlnbmNlbnRlciB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIH1cblxuICAgIC5hbGlnbnJpZ2h0IHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIG1hcmdpbi1sZWZ0OiAyNHB4O1xuICAgIH1cblxuICAgIC5hbGlnbmxlZnQge1xuICAgICAgZmxvYXQ6IGxlZnQ7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDI0cHg7XG4gICAgfVxuICB9XG5gO1xuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Title=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"h3\", false?undefined:{target:\"emgezev5\",label:\"Title\"})( false?undefined:{name:\"ymdyv3\",styles:\"margin:0;margin-top:24px;margin-bottom:4px\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const StyledLink=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(_link__WEBPACK_IMPORTED_MODULE_3__[\"default\"], false?undefined:{target:\"emgezev4\",label:\"StyledLink\"})( false?undefined:{name:\"1k93czn\",styles:\"padding:15px 0\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Author=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"p\", false?undefined:{target:\"emgezev3\",label:\"Author\"})( false?undefined:{name:\"1i1qai6\",styles:\"color:#666666;font-size:0.9em;display:inline\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const DateWrapper=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"p\", false?undefined:{target:\"emgezev2\",label:\"DateWrapper\"})( false?undefined:{name:\"1i1qai6\",styles:\"color:#666666;font-size:0.9em;display:inline\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const Tag=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"emgezev1\",label:\"Tag\"})( false?undefined:{name:\"1q61y37\",styles:\"color:hsl(116, 0%, 40%);font-size:0.9em;text-decoration:none\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});/**\n * This component is the parent of the `content.rendered` HTML. We can use nested\n * selectors to style that HTML.\n */const Content=Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"styled\"])(\"div\", false?undefined:{target:\"emgezev0\",label:\"Content\"})( false?undefined:{name:\"1imw57r\",styles:\"word-break:break-word;margin-top:30px;*{max-width:624px;width:100%;margin:auto;}p{line-height:1.55em;font-size:1.15em;margin:0.2em auto 1.1em;}img{width:100%;object-fit:cover;object-position:center;}figure{margin:24px auto;width:100%;figcaption{font-size:0.7em;}}iframe{display:block;margin:auto;}blockquote{margin:16px auto;background-color:rgba(0, 0, 0, 0.1);border-left:4px solid rgba(12, 17, 43);padding:4px 16px;}a{color:rgb(31, 56, 197);text-decoration:underline;}input[type=\\\"text\\\"],input[type=\\\"email\\\"],input[type=\\\"url\\\"],input[type=\\\"tel\\\"],input[type=\\\"number\\\"],input[type=\\\"date\\\"],textarea,select{display:block;padding:6px 12px;font-size:16px;font-weight:400;line-height:1.5;color:#495057;background-color:#fff;background-clip:padding-box;border:1px solid #ced4da;border-radius:4px;outline-color:transparent;transition:outline-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out;margin:8px 0 4px 0;&:focus{outline-color:#1f38c5;}}input[type=\\\"submit\\\"]{display:inline-block;margin-bottom:0;font-weight:400;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;background-image:none;border:1px solid #1f38c5;padding:12px 36px;font-size:14px;line-height:1.42857143;border-radius:4px;color:#fff;background-color:#1f38c5;}@media (min-width: 420px){img.aligncenter,img.alignleft,img.alignright{width:auto;}.aligncenter{display:block;margin-left:auto;margin-right:auto;}.alignright{float:right;margin-left:24px;}.alignleft{float:left;margin-right:24px;}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/post.js\n");

/***/ })

})